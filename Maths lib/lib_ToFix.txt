pyd compile + unit_test (approximately done)
+ integration & import test (compatibility between libs)
+ 


parallel code & chrono timing (at the end)
quoi que, je sais pas si c'est une bonne idée, peut
être mieux vaut garder la parallelisation de plus 
haut niveau.
Le risque etant de "sur-paralleliser" le code et le ralentir
Au moins les loop de la matrix lib sur 4 threads
pour pas prendre trop de risques (au pire si il y a
parallelisation haut niveau on passe à 8/16 threads)

Le mieux en vérité serait de compiler (need Virtual C++ licence...)
4 versions differentes :
-classique
-parallel x2
-parallel x4
-parallel x8
et de faire des tests d'integration chronométré

Une fois les librairies fixées et vérifiées, moins de 10mo de source
à caller dans un petit coin de calculateur en free-access pour les 
programmeurs/utilisateurs
Adaptation du profil de //isation proportionnel au nombre de coeurs.

